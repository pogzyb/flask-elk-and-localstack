---
version: "3.5"
services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - app_default

  app:
    build:
      context: .
      dockerfile: scrapp/Dockerfile
    hostname: app
    container_name: app
    env_file:
      - ".env.local"
    ports:
      - "8080:8080"
    volumes:
      - "./scrapp:/scrapp"
      - "./data/logs:/logs"
    entrypoint: "dockerize -wait tcp://database:5432 -timeout 120s" # -wait http://elasticsearch:9200"
    command: ["/bin/ash", "-c", "/entrypoint.sh"]
    networks:
      - app_default

  database:
    image: postgres:11
    container_name: database
    hostname: database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=wikiman
      - POSTGRES_PASSWORD=w1k123
      - POSTGRES_DB=wikifrontend
    networks:
      - app_default

  cache:
    image: library/redis:6.0-alpine
    container_name: cache
    hostname: cache
    ports:
      - "6379:6379"
    networks:
      - app_default

  sqs-consumer:
    build:
      context: .
      dockerfile: sqs/Dockerfile
    container_name: sqs-consumer
    env_file:
      - ".env.local"
    entrypoint: ["dockerize", "-wait", "tcp://aws-stack:4566", "-timeout", "300s"]
    command: ["/code/start.sh"]
    networks:
      - app_default

  aws-stack:
    image: localstack/localstack-full:0.12.13
    hostname: aws-stack
    container_name: aws-stack
    environment:
      - DEBUG=1
      - SERVICES=sqs,dynamodb,ses,kinesis,lambda,logs,cloudwatch
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_DOCKER_NETWORK=app_default
      - LAMBDA_REMOTE_DOCKER=true
      - LAMBDA_REMOVE_CONTAINERS=false
      - HOSTNAME_EXTERNAL=aws-stack
      - HOSTNAME_FROM_LAMBDA=aws-stack
      - PORT_WEB_UI=9999
      - START_WEB=1
    ports:
      - "9999:9999"
      - "4566:4566"
      - "4586:4586"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./aws/startup:/docker-entrypoint-initaws.d"
      - "./aws/dynamodb-json/wikis.json:/tmp/wikis.json"
      - "./aws/lambda-files:/tmp/lambda-files"
      - "./data/localstack:/tmp/localstack"
    networks:
      - app_default

  elasticsearch:
    image: library/elasticsearch:7.11.2
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "50"
    networks:
      - app_default

  logstash:
    image: library/logstash:7.11.2
    container_name: logstash
    hostname: logstash
    volumes:
      - "./logstash/config:/usr/share/logstash/config"
      - "./logstash/pipeline:/usr/share/logstash/pipeline"
      - "./logstash/templates:/usr/share/logstash/templates"
    environment:
      - SOFTWARE_INSTALL_FOLDER=/usr/share/logstash
      - PIPELINE_CONFIG=/usr/share/logstash/pipeline
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - ELASTICSEARCH_HTTP_HOST=http://elasticsearch:9200
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - app_default

  kibana:
    image: library/kibana:7.11.2
    container_name: kibana
    hostname: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - app_default

  filebeat:
    image: elastic/filebeat:7.11.2
    container_name: filebeat
    volumes:
      - "/var/run/docker.sock:/host_docker/docker.sock"
      - "/var/lib/docker:/host_docker/var/lib/docker"
      - "./data/logs:/usr/share/filebeat/applogs/scrapp_logs"
      - "./filebeat/config/inputs.d:/usr/share/filebeat/inputs.d"
      - "./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml"
    environment:
      - SOFTWARE_INSTALL_FOLDER=/usr/share/filebeat
      - LOGSTASH-HOST=logstash
      - LOGSTASH-PORT=5044
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - ELASTICSEARCH_HTTP_HOST=http://elasticsearch:9200
    depends_on:
      - logstash
    networks:
      - app_default

networks:
  app_default:
    name: app_default
